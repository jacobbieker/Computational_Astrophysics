The 3-body problem seeks to answer the question how three objects orbit each other in a repeating pattern. The gravitation theory 
predicts the orbit of two bodies but doesnâ€™t provide solutions to how three bodies would orbit each other. It has been shown that 
the motion of three bodies is repeating only under special circumstances. As bodies move, they draw out "strands" in 3D space-time. 
The motion of three particles of unequal mass and zero angular momentum can be pictured as "braids" of strands.

Our solution uses sun_venus_earth,py as a basis and adapts it for the 3-body problem with unequal masses, zero angular momentum, 
and arbitrary units. The code uses the gravity simulator Huyano to evolve the system from the given initial conditions. 

The braid is stable if the orbit is periodic. A periodic orbit means that the body starts and finishes its orbit in the same place. A 
periodic orbit is achieved when the initial conditions of the orbit, position and velocity give a proximity function less than 10^6. 
With our code we tested this by running the simulation for time -> infinity . As video ThreeBodyProblem_unstable_animation.mpg show the 
orbit is not stable as time -> infinity we believe this is due, in part, to the build up of numerical error.

We would argue that braids like the one we recreated and the other in Xiaoming et al. are not stable against perturbations as they
are created in a perfect environment where these objects formed and became gravitationally bound without any resulting planets, moons,
or other factors influencing their orbits.  In addition it is highly unlikely that the initial conditions for mass of the bodies (m_1 = m_2 
and m_3 being exactly half of m_1 for instance) would be satisfied in the Universe. Despite the complexity of these systems, these 3-body 
simulations are the basis for which the n-body systems that appear in the universe are built from. One of these orbits could exist in a 
binary star system if another star was pulled into their orbit as well. You would maybe look closer to the center of galaxies for these 
types of systems as the star populations are much more dense and the probability of coming across one of these systems more likely. On the 
other hand the 3-body problem can also be applied to the atomic level. The Helium atom is another example of the 3-body problem with two 
electrons orbiting a nucleus. This time instead of gravity it is electromagnetism that holds the atom together. 

If we were to write this simulator without Amuse we would need to ensure that the code follows this pattern. For three bodies: 
1) Set your initial value for the gravitational constant G. 
2)  Use initial conditions (mass and distance) to calculate the net force working on all individual particles with Newtons equation 
of gravitational interaction. 
3) Use that force to calculate the acceleration of all particles for a small time step. 
4) Use acceleration to calculate the position after small time step
 Repeat






